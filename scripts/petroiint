#!/bin/bash
################################################################################
# PET roi intensity extraction. This program generates ROI intensity based on  #
# input PET data and ROI data.						       #
#                                   				               #
# USAGE:								       #
#	petroiint paramsfn                                                     #
#                                                                              #
# This script reads a params file that includes:                               #
#	petid:	petid is a string associated with the file name PET data in    #
#               4dfp format, it should be a single frame image.		       #
#	roiimg: roiimg is a string associated with the file name of the        #
#		roi definetion image in 4dfp format.			       #
#	roilist:the text file that lists ROI names and corresponding roi label #
#               in the roiimg file                                             #
#	pet2roit4: the t4 file that specifies the transformation from PET      #
#		   space to roi space                                          #
#	fwhm:	PET resolution in mm					       #
#	rsfflag: whether RSF PVC will be performed			       #
#	pvc2cflag: whether PVC2C will be performed			       #
#									       #
#									       #
# The output of this program is a series of TAC curves			       #
################################################################################
# Yi Su, 01/07/2014
VERSION=1.0

if [ "$1" == "--version" ]; then
    echo $VERSION
    exit 0
fi

die(){
    echo >&2 "$@"
    exit -1
}

program=`basename $0`
idstr='$Id: '$program',v '$VERSION' Fri Jan 31 09:40:16 CST 2014 suy $'
echo $idstr

if [ $# -lt 1 ]
then
	echo "Usage: $program paramsfn"
	exit -1
fi

paramsfn=$1
###############################################################################
# Read PARAMS file
source $paramsfn

# Further development will improve this program which checks the validity of
# the inputs specified in the params file
NROI=`wc -l $roilist | gawk '{print $1}'`
###############################################################################
# RSF preprocessing if requested
if (( rsfflag == 1 ))
then
	if [ ! -e RSFMat.dat ]
	then
		calrsfmat $roiimg $roilist RSFMat.dat $fwhm || die "$program ERROR: calrsfmat $roiimg $roilist RSFMat.dat $fwhm failed"
	fi
fi

###############################################################################
# PVC2C preprocessing if requested
if (( pvc2cflag == 1 ))
then
	if [ ! -e pvc2c.txt ]
	then
		imgblur_4dfp BrainMask $fwhm || die "$program ERROR: imgblur_4dfp BrainMask $fwhm failed"
		bx=`echo $fwhm | awk '{print 10*$1}'`
		bstr="_b"$bx
		roieval3 BrainMask${bstr} $roiimg PETFOV $roilist $NROI pvc2c 0 || die "$program ERROR: roieval3 BrainMask${bstr} $roiimg PETFOV $roilist $NROI pvc2c 0 failed"
		mv pvc2c_ROI2_f0 pvc2c.txt
	fi
fi

###############################################################################
# Perform ROI analysis
t4img_4dfp $pet2roit4 $petid ${petid}_on_roi -O${roiimg} || die "$program ERROR: t4img_4dfp $pet2roit4 $petid ${petid}_on_roi -O${roiimg} failed"
if (( rsfflag == 1 ))
then
	rsfroieval2 ${petid}"_on_roi" $roiimg RSFMat.dat PETFOV $roilist $NROI 10 ${petid} 1 || die "$program ERROR: rsfroieval2 ${petid}_on_roi $roiimg RSFMat.dat PETFOV $roilist $NROI 10 ${petid} 1 failed"
else
	roieval3 ${petid}"_on_roi" $roiimg PETFOV $roilist $NROI ${petid} 1 || die "$program ERROR: roieval3 ${petid}_on_roi $roiimg PETFOV $roilist $NROI ${petid} 1 failed"
fi


###############################################################################
# Generate ROI Files
for (( i=1; i<=NROI; i++ ))
do
	(( l = i + 1 ))
	label=`gawk 'NR=='$i' {print $1}' $roilist`
	echo "label = ${label}"
	tacfn=${petid}_${label}.tac
	rsftacfn=${petid}_${label}_RSF.tac
	pvc2ctacfn=${petid}_${label}_PVC2C.tac

	NVOX=`gawk 'NR=='$l' {print $2}' ${petid}_ROI2_f1`
	printf "%9s %15s %15s %15s %15s %10d\n" "Frame_#" "Start_Time_(s)" "Duration_(s)"  "Mean" "NVoxels=" $NVOX > $tacfn
	if (( rsfflag == 1 ))
	then
		printf "%9s %15s %15s %15s %15s %10d\n" "Frame_#" "Start_Time_(s)" "Duration_(s)"  "Mean"  "NVoxels=" $NVOX > $rsftacfn
	fi
	if (( pvc2cflag == 1 ))
	then
		printf "%9s %15s %15s %15s %15s %10d\n" "Frame_#" "Start_Time_(s)" "Duration_(s)"  "Mean"  "NVoxels=" $NVOX > $pvc2ctacfn
	fi

	framefn=${petid}"_ROI2_f1"
	rsffn=${petid}"_RSF_ROI2_f1"
	ts=`gawk 'NR==1 {print $1}'  ${petid}".info"`
	td=`gawk 'NR==1 {print $3}'  ${petid}".info"`
	meanroi=`gawk 'NR=='$l' {print $3}' $framefn`
	printf "%9d %15f %15f %15f\n" 1 $ts $td $meanroi >> $tacfn
	if (( rsfflag == 1 ))
	then
		meanroirsf=`gawk 'NR=='$l' {print $3}' $rsffn`
		printf "%9d %15f %15f %15f\n" 1 $ts $td $meanroirsf >> $rsftacfn
	fi

	if (( pvc2cflag == 1 ))
	then
		cf=`gawk '/'$label'/ {print $3}' pvc2c.txt`
		meanroipvc2c=$(echo "scale=8; $meanroi/($cf+0.00001)" | bc)
		printf "%9d %15f %15f %15f\n" 1 $ts $td $meanroipvc2c >> $pvc2ctacfn
	fi

done

